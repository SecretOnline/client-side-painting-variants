name: Release

on:
  workflow_dispatch:
    inputs:
      is-release:
        description: Publish release
        required: true
        type: boolean
      version:
        description: Pack version (no v prefix)
        required: true
        type: string

env:
  MOD_NAME: Client side painting variants
  MOD_ID: client-side-painting-variants
  MODRINTH_PROJECT_ID: T1MOUdih

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Gradle wrapper is executable
        run: chmod +x ./gradlew

      - name: Validate Gradle
        uses: gradle/wrapper-validation-action@v2

      - name: Get Minecraft version
        id: get-minecraft-version
        run: |
          minecraft_version=$(grep '^minecraft_version=' gradle.properties | cut -d= -f2)
          echo "minecraft-version=$minecraft_version" >> "$GITHUB_OUTPUT"

          version_url=$(curl -s https://piston-meta.mojang.com/mc/game/version_manifest_v2.json | jq --raw-output ".versions | map(select(.id == \"$minecraft_version\"))[0].url")
          java_version=$(curl -s "$version_url" | jq --raw-output '.javaVersion.majorVersion')
          echo "java-version=$java_version" >> "$GITHUB_OUTPUT"

      - name: Setup Java ${{ steps.get-minecraft-version.outputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ steps.get-minecraft-version.outputs.java-version }}
          distribution: "zulu"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Get deploy info
        id: deploy-info
        run: |
          # Also update the mod version in gradle
          sed -i "s/^mod_version=.*/mod_version=${{ inputs.version }}/" gradle.properties

          game_versions=$(grep '^minecraft_version=' gradle.properties | cut -d= -f2)
          release_name="${{ env.MOD_NAME }} v${{ inputs.version }} for Minecraft $game_versions"

          echo "release-name=$release_name" >> "$GITHUB_OUTPUT"
          echo "game-versions=$game_versions" >> "$GITHUB_OUTPUT"

      - name: Parse changelog
        id: changelog
        uses: release-flow/keep-a-changelog-action@v3
        with:
          command: query
          version: v${{ inputs.version }}
          changelog: CHANGELOG.md

      - name: Build
        run: ./gradlew clean build

      - name: Print release details
        run: |
          echo "name: ${{ steps.deploy-info.outputs.release-name }}"
          echo "version: v${{ inputs.version }}"
          echo "game-versions: ${{ steps.deploy-info.outputs.game-versions }}"
          echo "changelog: ${{ steps.changelog.outputs.release-notes }}"

      - name: Create Modrinth Release
        if: inputs.is-release
        id: modrinth-release
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          name: ${{ steps.deploy-info.outputs.release-name }}
          version: v${{ inputs.version }}
          game-versions: ${{ steps.deploy-info.outputs.game-versions }}
          changelog: ${{ steps.changelog.outputs.release-notes }}
          loaders: fabric
          modrinth-id: ${{ env.MODRINTH_PROJECT_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

      - name: Update Modrinth decription
        if: inputs.is-release
        uses: funnyboy-roks/modrinth-auto-desc@v1.6
        with:
          auth-token: ${{ secrets.MODRINTH_TOKEN }}
          slug: ${{ env.MODRINTH_PROJECT_ID }}
          readme: README.md

      - name: Create GitHub release
        if: inputs.is-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: ${{ steps.deploy-info.outputs.release-name }}
          body: ${{ steps.changelog.outputs.release-notes }}
          files: |
            build/libs/!(*-@(dev|sources|javadoc)).jar
            build/libs/*-@(dev|sources|javadoc).jar
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Post release to Discord
        if: inputs.is-release
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: |
            ${{ steps.deploy-info.outputs.release-name }} has been released! https://modrinth.com/mod/${{ env.MOD_ID }}/version/v${{ inputs.version }}
